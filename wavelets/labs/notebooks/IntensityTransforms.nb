(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     30387,        762]
NotebookOptionsPosition[     25984,        689]
NotebookOutlinePosition[     26328,        704]
CellTagsIndexPosition[     26285,        701]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Lab 3.1: Exploring Intensity Transformations", "Section",
 CellChangeTimes->{{3.6747410188032584`*^9, 3.674741042688301*^9}, {
   3.674742552975814*^9, 3.6747425597738523`*^9}, {3.67474453723468*^9, 
   3.674744561535725*^9}, {3.674747931751519*^9, 3.6747479370307474`*^9}, 
   3.6747516510077415`*^9, {3.674754123065485*^9, 3.674754140322116*^9}, {
   3.6751749126193643`*^9, 3.6751749154137692`*^9}, {3.6755147920766993`*^9, 
   3.6755147959137897`*^9}, {3.675527343559159*^9, 3.675527350929307*^9}, {
   3.6755288505176797`*^9, 3.675528858287467*^9}, {3.6755298287755394`*^9, 
   3.675529837330626*^9}, 3.703855401083161*^9, {3.727011156743316*^9, 
   3.727011160055276*^9}, {3.7270114909635525`*^9, 3.7270114966106634`*^9}, {
   3.7298617740082817`*^9, 3.7298617804688063`*^9}, {3.7298618142457356`*^9, 
   3.729861817366371*^9}, {3.729936061603035*^9, 3.729936065090923*^9}, {
   3.730197863129013*^9, 3.7301978954844265`*^9}, {3.7318408662267294`*^9, 
   3.7318408668665113`*^9}, 3.733655762505674*^9, {3.7336569182444115`*^9, 
   3.7336569268211536`*^9}, {3.7337417827920628`*^9, 3.7337417928549447`*^9}, 
   3.733747003208581*^9, {3.733942267083254*^9, 3.7339422932909765`*^9}, {
   3.7341087702041264`*^9, 3.7341087706679077`*^9}, {3.734446571834507*^9, 
   3.7344465825063868`*^9}},ExpressionUUID->"b4d3dd46-bf41-416a-8a69-\
8d3f86104986"],

Cell["\<\
In this lab, you will develop code to apply gamma correction and histogram \
equalization to digital images.\
\>", "Text",
 CellChangeTimes->{{3.6747410667041707`*^9, 3.6747410805055957`*^9}, {
  3.6747424105934367`*^9, 3.674742410733837*^9}, {3.674742572300502*^9, 
  3.674742584222324*^9}, {3.6747445741715794`*^9, 3.6747445846113987`*^9}, {
  3.6747479622130194`*^9, 3.674747968138232*^9}, {3.675174920421378*^9, 
  3.6751749285570188`*^9}, {3.6755273968654437`*^9, 3.6755274039395885`*^9}, {
  3.6755288612083807`*^9, 3.6755288683421783`*^9}, {3.6755298409106617`*^9, 
  3.6755298515318317`*^9}, {3.7270111747609496`*^9, 3.7270111855638227`*^9}, {
  3.729861836007686*^9, 3.729861854391374*^9}, {3.7299360749950047`*^9, 
  3.7299360763870363`*^9}, {3.730198023850702*^9, 3.7301980498871727`*^9}, {
  3.733656968527128*^9, 3.733657024518409*^9}, {3.7337417989201775`*^9, 
  3.7337418324881754`*^9}, {3.7339423092236495`*^9, 3.733942345717663*^9}, {
  3.734446589963334*^9, 
  3.7344466127795334`*^9}},ExpressionUUID->"61b27de1-8e6c-4777-a97c-\
e405fa03ef99"],

Cell[CellGroupData[{

Cell["Reference", "Subsubsection",
 CellChangeTimes->{{3.6747631102003517`*^9, 3.6747631125733557`*^9}, 
   3.730197716407202*^9},ExpressionUUID->"3fffe5ac-09ce-46e2-8050-\
8c2090c2603e"],

Cell[TextData[{
 "The material for this lab is covered in Section 3.1 of the book",
 ButtonBox["Discrete Wavelet Transformations: An Elementary Approach with \
Applications, 2nd Ed.",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wiley.com/en-us/Discrete+Wavelet+Transformations%3A+An+\
Elementary+Approach+with+Applications%2C+2nd+Edition-p-9781118979310"], None},
  ButtonNote->
   "https://www.wiley.com/en-us/Discrete+Wavelet+Transformations%3A+An+\
Elementary+Approach+with+Applications%2C+2nd+Edition-p-9781118979310"],
 ", by Patrick J Van Fleet."
}], "Text",
 CellChangeTimes->{{3.674763119565366*^9, 3.6747631649004583`*^9}, {
   3.674763293323564*^9, 3.674763311554607*^9}, {3.6997856290190563`*^9, 
   3.699785638548086*^9}, {3.72692103296169*^9, 3.726921034949597*^9}, {
   3.7270063962717886`*^9, 3.727006396991242*^9}, 3.727009034200805*^9, 
   3.7270097537181544`*^9, {3.7270115331247635`*^9, 3.727011534185475*^9}, {
   3.729936081107809*^9, 3.729936081203467*^9}, {3.73019789874003*^9, 
   3.7301979003322897`*^9}, {3.733657027501221*^9, 3.733657027891911*^9}, 
   3.733741816664074*^9, 3.7339423044137287`*^9, {3.7344466164445457`*^9, 
   3.7344466169881816`*^9}, {3.7726247512232523`*^9, 
   3.772624752925463*^9}},ExpressionUUID->"6a87367e-199b-4755-909b-\
1f0e93964a15"]
}, Open  ]],

Cell[CellGroupData[{

Cell["WaveletWare Commands Used in This Notebook", "Subsubsection",
 CellChangeTimes->{{3.6747417571916847`*^9, 3.674741765831501*^9}, {
  3.6747418595935683`*^9, 
  3.6747419193671017`*^9}},ExpressionUUID->"f0a02de7-73c3-4fdf-9fb7-\
3b6354eb70fb"],

Cell["Execute the line below to load the WaveletWare package.", "Text",
 CellChangeTimes->{{3.726919365764247*^9, 
  3.7269193911263213`*^9}},ExpressionUUID->"1c2f17b5-7d52-43ea-8284-\
97a0802ab4e4"],

Cell[BoxData[
 RowBox[{"<<", "WaveletWare`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7269193243151226`*^9, 3.7269193578933735`*^9}, {
   3.7270065374179773`*^9, 3.727006537593671*^9}, {3.7270070318050675`*^9, 
   3.7270070319488754`*^9}, {3.7270084778120003`*^9, 
   3.7270084779023743`*^9}, {3.7270097015398407`*^9, 
   3.7270097017317114`*^9}, {3.727009916604597*^9, 3.72700991671616*^9}, {
   3.7270102740659857`*^9, 3.7270102742043266`*^9}, {3.727011436528392*^9, 
   3.727011436639927*^9}, 3.727011861141736*^9, {3.729880762923499*^9, 
   3.729880763098421*^9}, {3.729944604988558*^9, 3.7299446052435875`*^9}, {
   3.731346422962227*^9, 3.7313464231599517`*^9}, {3.732037657952439*^9, 
   3.732037658623538*^9}, {3.732288796028294*^9, 3.7322887961236305`*^9}, {
   3.7336738043457527`*^9, 3.733673804473096*^9}, {3.733745102456643*^9, 
   3.733745102615449*^9}, {3.734107510911276*^9, 3.7341075110413103`*^9}, {
   3.7354900862323427`*^9, 
   3.735490086372984*^9}},ExpressionUUID->"d0fbe505-08c6-4c5e-bfcb-\
4eebc307ea21"],

Cell["\<\
Execute the line below to generate quick help on WaveletWare commands used in \
this notebook.  Click on >> for each command to access detailed documentation \
on the command.\
\>", "Text",
 CellChangeTimes->{{3.726919395574725*^9, 
  3.7269194464807606`*^9}},ExpressionUUID->"49e06bb1-94fd-4029-9342-\
21f25eef50ef"],

Cell[BoxData[{
 RowBox[{"?", "GammaCorrection"}], "\[IndentingNewLine]", 
 RowBox[{"?", "PackageDirectory"}], "\[IndentingNewLine]", 
 RowBox[{"?", "ImageRead"}], "\[IndentingNewLine]", 
 RowBox[{"?", "ImagePlot"}], "\[IndentingNewLine]", 
 RowBox[{"?", "HistogramEQ"}], "\[IndentingNewLine]", 
 RowBox[{"?", "ImageInfo"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQXSPadbnjyGvHlml7roPoIt/yyM1AmqX8MphOWJqV
AKJrbn9KBNEzanIKQHSEIGshiFZIvj4DRCdHN8wC0VXhqutB9BP+SDBdqi/6
FUR7lp38AaLP7qz5C6IbWu+Bae+aSJYtQHr1+T1g2iW+bBGI7mkQXAqmfx54
AqI/HDoDpr1dj/wG0etz5/8F0Qf6S822AmmnglYwLXMiZAOIViiYuBFEz7g1
uffUKaB7HzwH03oXd1T9OvPa0dV3bjWInnVv5uOsi68dP9nsfQui04+8zuoD
0oeSXLJBdNd57SIQXeKbWQqiJ80+VQmiN0+QrQLR726cWmN36bWjTyTLWhDN
9O6A6xMgPWv7Nk8Qbdn5+sjDK68d+d7tPwWiAdz93cc=
  "],ExpressionUUID->"274fa8e9-9ea5-489e-93a8-dbe841fdbfb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modules Created in this Lab", "Subsubsection",
 CellChangeTimes->{{3.7368676701301727`*^9, 
  3.7368676768044405`*^9}},ExpressionUUID->"d233525e-e75a-4a90-85f4-\
3a8ccfe52efd"],

Cell[TextData[{
 StyleBox["GammaC",
  FontWeight->"Bold"],
 ", ",
 StyleBox["HistEQ",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.736867686442602*^9, 
  3.7368677111146307`*^9}},ExpressionUUID->"d159a1d8-b2dc-48b7-b3a7-\
8600855d1bc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Gamma Correction", "Subsubsection",
 CellChangeTimes->{{3.733742449696621*^9, 3.733742453424845*^9}, {
  3.7339440538167305`*^9, 3.7339440681629972`*^9}, {3.7339440991929975`*^9, 
  3.7339441003454056`*^9}, {3.7344466293406873`*^9, 
  3.7344466322685947`*^9}},ExpressionUUID->"2aef78a0-fa28-4288-b4ee-\
f6fce3037f4a"],

Cell[TextData[{
 "We use (3.1) to perform gamma correction on a given intensity value.  Write \
code for ",
 StyleBox["pnew",
  FontWeight->"Bold"],
 " in the cell below and try different values for ",
 StyleBox["p",
  FontWeight->"Bold"],
 " and ",
 StyleBox["gamma",
  FontWeight->"Bold"],
 ".  Recall, ",
 StyleBox["p",
  FontWeight->"Bold"],
 " must be an integer in [0,255]."
}], "Text",
 CellChangeTimes->{{3.7337424572322245`*^9, 3.7337424811219687`*^9}, {
  3.7339440903902035`*^9, 3.7339443638084354`*^9}, {3.7344467804349375`*^9, 
  3.7344468665494356`*^9}},ExpressionUUID->"915c054b-c3eb-4413-aa35-\
a3586e1346a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gamma", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "127"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pnew", "="}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "replace", " ", "this", " ", "comment", " ", "with", " ", "your", " ", 
    "code", " ", "to", " ", "perform", " ", "gamma", " ", "correction"}], " ",
    "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GammaCorrection", "[", 
  RowBox[{"p", ",", "gamma"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7339443707788754`*^9, 3.733944404845153*^9}, {
   3.73394561094262*^9, 3.733945623227046*^9}, {3.7339456583865485`*^9, 
   3.733945727564765*^9}, 3.734106659119423*^9, {3.7341075127131796`*^9, 
   3.7341075128853316`*^9}, {3.7344468705338144`*^9, 
   3.7344469195613966`*^9}, {3.7354900898027043`*^9, 
   3.7354900899756165`*^9}, {3.735491265321042*^9, 
   3.7354912774366274`*^9}},ExpressionUUID->"4098846f-c384-490d-b75a-\
4ebd9c28d9ad"],

Cell[TextData[{
 "Verify that your code for ",
 StyleBox["pnew",
  FontWeight->"Bold"],
 " works if ",
 StyleBox["p",
  FontWeight->"Bold"],
 " is an image matrix.  Try different values of ",
 StyleBox["gamma",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.734447691728656*^9, 3.7344477086407127`*^9}, {
  3.734447787939939*^9, 
  3.73444779181211*^9}},ExpressionUUID->"6252b4fb-212b-4344-97f9-\
be0cc4030a12"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{
    RowBox[{"PackageDirectory", "[", 
     RowBox[{"DataType", "\[Rule]", "Images"}], "]"}], "<>", 
    "\"\<benches.png\>\""}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"ImageRead", "[", "file", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImagePlot", "[", "p", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pnew", "="}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "replace", " ", "this", " ", "comment", " ", "with", " ", "your", " ", 
    "code", " ", "to", " ", "perform", " ", "gamma", " ", "correction"}], " ",
    "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImagePlot", "[", "pnew", "]"}]}], "Input",
 CellChangeTimes->{{3.734447716229906*^9, 3.7344477809002323`*^9}, {
   3.7354900928823566`*^9, 3.735490093022745*^9}, 
   3.735491291667943*^9},ExpressionUUID->"034ce676-c4f4-4cf3-b55e-\
c45b9066841a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A Module for Gamma Correction", "Subsubsection",
 CellChangeTimes->{{3.7344476714228535`*^9, 
  3.7344476753589845`*^9}},ExpressionUUID->"66bd68ef-1ab3-45a4-9656-\
57fd13d9edc8"],

Cell[TextData[{
 "Use the code from the cells above to create the module ",
 StyleBox["GammaC",
  FontWeight->"Bold"],
 " that takes as input an integer in [0,255] or a digital image matrix along \
with a value for \[Gamma] and returns the \[Gamma]-corrected value or matrix."
}], "Text",
 CellChangeTimes->{{3.733944577894718*^9, 3.733944664191591*^9}, {
   3.7344478017803307`*^9, 3.734447870600957*^9}, 
   3.7354896312308316`*^9},ExpressionUUID->"d5dbe6f7-61f1-4cb2-9d10-\
408f26d67d0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GammaC", "[", 
    RowBox[{"p_", ",", "gamma_"}], "]"}], ":="}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "replace", " ", "this", " ", "comment", " ", "with", " ", "a", " ", "line",
     " ", "that", " ", "performs", " ", "gamma", " ", "correction"}], " ", 
   "*)"}], ";"}]], "Input",
 CellChangeTimes->{{3.7339446450782814`*^9, 3.7339446809013577`*^9}, {
  3.7341075144317017`*^9, 3.7341075145741315`*^9}, {3.734108779967844*^9, 
  3.734108800884452*^9}, {3.734447875383375*^9, 3.7344478932250266`*^9}, {
  3.734448110098389*^9, 3.7344481157122045`*^9}, {3.734448156176999*^9, 
  3.7344481563839617`*^9}, {3.735490140783177*^9, 3.7354901408820868`*^9}, {
  3.7354913002985487`*^9, 
  3.7354913184219756`*^9}},ExpressionUUID->"35ac0013-9da8-46bd-9b5e-\
a6edecb30c1e"],

Cell[TextData[{
 "The cells below can be used to check your routine.  Try different values of \
",
 StyleBox["gamma",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.7339448507292166`*^9, 3.7339448657464232`*^9}, {
   3.734447902855809*^9, 3.734447924841146*^9}, 
   3.734447979483107*^9},ExpressionUUID->"8df99d87-5943-465d-8215-\
038ea6ef91fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gamma", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", "255"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pnew", "=", 
  RowBox[{"GammaC", "[", 
   RowBox[{"p", ",", "gamma"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pnew", "\[Equal]", 
  RowBox[{"GammaCorrection", "[", 
   RowBox[{"p", ",", "gamma"}], "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7344479292269635`*^9, 3.734447991213205*^9}, {
  3.735490142131405*^9, 
  3.735490142287655*^9}},ExpressionUUID->"b9b3e698-b024-4721-b8a1-\
8284c3e4ffb3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{
    RowBox[{"PackageDirectory", "[", 
     RowBox[{"DataType", "\[Rule]", "Images"}], "]"}], "<>", 
    "\"\<canoes.png\>\""}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"ImageRead", "[", "file", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImagePlot", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gamma", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Anew", "=", 
   RowBox[{"GammaC", "[", 
    RowBox[{"A", ",", "gamma"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ImagePlot", "[", "Anew", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Anew", "\[Equal]", 
  RowBox[{"GammaCorrection", "[", 
   RowBox[{"A", ",", "gamma"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7344479991176186`*^9, 3.7344480867523775`*^9}, {
  3.7344481355865345`*^9, 3.73444818118444*^9}, {3.7354901437889194`*^9, 
  3.735490143930532*^9}},ExpressionUUID->"dda7bea2-a143-4a8d-907d-\
c86e548af6c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Histogram Equalization", "Subsubsection",
 CellChangeTimes->{{3.7339458032793903`*^9, 3.733945838121322*^9}, {
  3.73445027789738*^9, 
  3.7344502831452537`*^9}},ExpressionUUID->"6fb54b0e-960f-4561-b0ec-\
dcc930832f11"],

Cell["\<\
We start by importing and plotting an image from the WaveletWare package.\
\>", "Text",
 CellChangeTimes->{{3.7354887981979647`*^9, 
  3.7354888221520634`*^9}},ExpressionUUID->"52ea847f-4478-4bd4-b4da-\
852a840778a7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{
    RowBox[{"PackageDirectory", "[", 
     RowBox[{"DataType", "\[Rule]", "Images"}], "]"}], "<>", 
    "\"\<road.png\>\""}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"ImageRead", "[", "file", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImagePlot", "[", "A", "]"}]}], "Input",
 CellChangeTimes->{{3.7341065479090643`*^9, 3.734106637885829*^9}, {
  3.73410669612941*^9, 3.7341067366083565`*^9}, {3.7341075254020925`*^9, 
  3.7341075255504603`*^9}, {3.734108874160736*^9, 3.7341088970085816`*^9}, {
  3.73445046144042*^9, 3.7344505033460927`*^9}, {3.734450657081924*^9, 
  3.7344506579123487`*^9}, {3.734450700587386*^9, 3.7344507017378917`*^9}, {
  3.7354879270008783`*^9, 3.735487927981748*^9}, {3.735488155585103*^9, 
  3.735488171441956*^9}, {3.7354901486709003`*^9, 
  3.7354901488943586`*^9}},ExpressionUUID->"af524d8e-4f21-4bbe-9f16-\
4808a0b390d9"],

Cell[TextData[{
 "The next step is to determine a list ",
 StyleBox["h",
  FontWeight->"Bold"],
 " of length 256 whose value ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["h", "k"], TraditionalForm]],ExpressionUUID->
  "2dbd2d20-91fb-4363-9a5c-a95eaf022943"],
 " is the number of times intensity ",
 StyleBox["k-1",
  FontSlant->"Italic"],
 " appears in the image.   You can construct h using ",
 StyleBox["BinCounts",
  FontWeight->"Bold"],
 " and ",
 StyleBox["Flatten",
  FontWeight->"Bold"],
 ".  Once we have ",
 StyleBox["h",
  FontWeight->"Bold"],
 ", we compute ",
 StyleBox["T",
  FontWeight->"Bold"],
 " given in (3.4).  The ",
 StyleBox["Accumulate",
  FontWeight->"Bold"],
 " command will be useful and you will need the ",
 StyleBox["Dimensions",
  FontWeight->"Bold"],
 " of the image as well.  Put your code for ",
 StyleBox["h",
  FontWeight->"Bold"],
 " and ",
 StyleBox["T",
  FontWeight->"Bold"],
 " in the cell below."
}], "Text",
 CellChangeTimes->{{3.735488828760893*^9, 3.7354888311658487`*^9}, {
  3.7354888623274403`*^9, 3.7354888720271425`*^9}, {3.7354889202165976`*^9, 
  3.7354890539599657`*^9}, {3.7354891025859613`*^9, 
  3.7354891073074703`*^9}},ExpressionUUID->"32e016c5-2235-4014-89ef-\
f9dd3099c899"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "replace", " ", "this", " ", "comment", " ", "with", " ", "codes", " ", 
    "to", " ", "compute", " ", "h", " ", "and", " ", "T"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"T", ",", 
    RowBox[{"Ticks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "255", ",", "50"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", "1", ",", ".2"}], "]"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7344505453191986`*^9, 3.7344506156554337`*^9}, {
  3.73445080961515*^9, 3.7344509182592278`*^9}, {3.7344510500246615`*^9, 
  3.7344510702513094`*^9}, {3.735490150646424*^9, 3.7354901507555733`*^9}, {
  3.7354913339564133`*^9, 
  3.735491343145512*^9}},ExpressionUUID->"aa248746-e193-4272-8efa-\
e497d9204cc0"],

Cell[TextData[{
 "We equalize the image using (3.3).  That is, for each intensity \
k=0,...,255, we create ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["eq", "k"], TraditionalForm]],ExpressionUUID->
  "42767326-09b5-4339-ae32-24d8219c9012"],
 ".  This is a bit cumbersome in Mathematica, but one way to do it is to \
create a list of rules that sends ",
 StyleBox["k",
  FontSlant->"Italic"],
 " to ",
 StyleBox["Floor",
  FontWeight->"Bold"],
 "[255*",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "k"], TraditionalForm]],ExpressionUUID->
  "80c0c4dd-abfe-4bd1-a50d-19340c53eac2"],
 "].  We can do this using the ",
 StyleBox["MapThread",
  FontWeight->"Bold"],
 " command with the function #1->#2&.  The #1 values are simply the integers \
0,...,255 (obtained using the ",
 StyleBox["Range",
  FontWeight->"Bold"],
 " command) and the #2 values are ",
 StyleBox["Floor",
  FontWeight->"Bold"],
 "[255*",
 StyleBox["T",
  FontWeight->"Bold"],
 "].  Finally, we can use the ",
 StyleBox["ReplaceAll",
  FontWeight->"Bold"],
 " command, or ",
 StyleBox["/.",
  FontWeight->"Bold"],
 ", to replace the elements in the image by their corrected values (stored in \
",
 StyleBox["rules",
  FontWeight->"Bold"],
 ") to obtain the histogram-equalized image ",
 StyleBox["newA",
  FontWeight->"Bold"],
 ".  "
}], "Text",
 CellChangeTimes->{{3.735489154343088*^9, 3.735489188365841*^9}, {
  3.735489221539588*^9, 3.735489383186796*^9}, {3.7354894546136055`*^9, 
  3.7354894929692173`*^9}, {3.735491376973981*^9, 
  3.7354913857494802`*^9}},ExpressionUUID->"0422ab36-e341-4b94-903a-\
7ca78aa00f11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "replace", " ", "this", " ", "comment", " ", "with", " ", "code", " ", 
    "to", " ", "compute", " ", "rules", " ", "and", " ", "newA"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ImagePlot", "[", "newA", "]"}]}]], "Input",
 CellChangeTimes->{{3.734451208683423*^9, 3.734451245211031*^9}, {
  3.7354879038658676`*^9, 3.735487909503632*^9}, {3.735489548191806*^9, 
  3.7354895512937994`*^9}, {3.735490152283555*^9, 3.735490152408372*^9}, {
  3.7354913542579613`*^9, 3.7354913682681704`*^9}, {3.7354914123641863`*^9, 
  3.735491413053014*^9}},ExpressionUUID->"0430c36d-cbed-4170-9be6-\
6cd0f994c822"],

Cell[TextData[{
 "The cell below allows you to check your work against results obtained by \
the WaveletWare function ",
 StyleBox["HistogramEQ",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.7354895108772554`*^9, 
  3.735489537064432*^9}},ExpressionUUID->"39a6a922-def2-4b9a-9f67-\
7a294ae2250f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"newA1", "=", 
   RowBox[{"HistogramEQ", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"newA", "\[Equal]", "newA1"}]}], "Input",
 CellChangeTimes->{{3.735487201058651*^9, 3.735487211369851*^9}, {
  3.735490154370446*^9, 
  3.73549015451086*^9}},ExpressionUUID->"65426331-6f5d-4d22-8bb3-\
b85417fb8e5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A Module for Histogram Equalization", "Subsubsection",
 CellChangeTimes->{{3.7344476714228535`*^9, 3.7344476753589845`*^9}, {
  3.7354895858178635`*^9, 
  3.7354895900407352`*^9}},ExpressionUUID->"5079f3ef-54e1-4916-912a-\
5d7f3f77a134"],

Cell[TextData[{
 "Use the code from the cells above to create the module ",
 StyleBox["HistEQ",
  FontWeight->"Bold"],
 " that takes as input an image matrix and returns the histogram-equalized \
image."
}], "Text",
 CellChangeTimes->{{3.733944577894718*^9, 3.733944664191591*^9}, {
  3.7344478017803307`*^9, 3.734447870600957*^9}, {3.7354895957318144`*^9, 
  3.7354896208432207`*^9}},ExpressionUUID->"4f014c93-a5ed-4d93-81d1-\
fffc023ba58b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HistEQ", "[", "a_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", "T", ",", "rules"}], "}"}], ","}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "replace", " ", "this", " ", "comment", " ", "with", " ", "your", " ", 
      "code", " ", "to", " ", "do", " ", "histogram", " ", "equalization", 
      " ", "of", " ", "a"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7339446450782814`*^9, 3.7339446809013577`*^9}, {
  3.7341075144317017`*^9, 3.7341075145741315`*^9}, {3.734108779967844*^9, 
  3.734108800884452*^9}, {3.734447875383375*^9, 3.7344478932250266`*^9}, {
  3.734448110098389*^9, 3.7344481157122045`*^9}, {3.734448156176999*^9, 
  3.7344481563839617`*^9}, {3.735489643205552*^9, 3.7354897037424235`*^9}, {
  3.7354901562916627`*^9, 3.735490156416645*^9}, {3.735491422185886*^9, 
  3.7354914387883487`*^9}},ExpressionUUID->"98a5ea28-1fcd-4fb0-8a83-\
16fe9a9c47bc"],

Cell[TextData[{
 "The cells below can be used to check your routine.  The ",
 StyleBox["ImageInfo",
  FontWeight->"Bold"],
 " command from the WaveletWare package generates information on several \
images that you can try to test your routine."
}], "Text",
 CellChangeTimes->{{3.7339448507292166`*^9, 3.7339448657464232`*^9}, {
   3.734447902855809*^9, 3.734447924841146*^9}, 3.734447979483107*^9, {
   3.735489722869906*^9, 3.7354897292908893`*^9}, {3.735489799545427*^9, 
   3.735489816018737*^9}, {3.7354901693611755`*^9, 
   3.7354901808466487`*^9}},ExpressionUUID->"1f0b3814-c3be-4513-822e-\
92ffc73d85b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{"ImageInfo", "[", 
    RowBox[{
     RowBox[{"ImageForm", "\[Rule]", "GrayScale"}], ",", 
     RowBox[{"DisplayInfo", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7344479292269635`*^9, 3.734447991213205*^9}, {
  3.7354898218718734`*^9, 3.7354898505620575`*^9}, {3.7354898878741193`*^9, 
  3.735489982942089*^9}, {3.73549015829045*^9, 
  3.7354901583998394`*^9}},ExpressionUUID->"e81782bf-5a47-4f8e-8031-\
1e9001174319"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"ImageRead", "[", 
    RowBox[{"files", "[", 
     RowBox[{"[", "5", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImagePlot", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newA", "=", 
   RowBox[{"HistEQ", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newA1", "=", 
   RowBox[{"HistogramEQ", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"newA", "\[Equal]", "newA1"}], "\[IndentingNewLine]", 
 RowBox[{"ImagePlot", "[", "newA", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7344479292269635`*^9, 3.734447991213205*^9}, {
  3.7354898218718734`*^9, 3.7354898505620575`*^9}, {3.7354898878741193`*^9, 
  3.735489982942089*^9}, {3.7354901590857277`*^9, 
  3.735490159226367*^9}},ExpressionUUID->"d48d4a83-611e-4b8b-be1a-\
040e59f9c2fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problems", "Subsubsection",
 CellChangeTimes->{{3.7344469588094134`*^9, 
  3.7344469595773973`*^9}},ExpressionUUID->"6ca58717-5e56-4c6c-b77d-\
3d784d01dc8c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Use your function ",
 StyleBox["GammaC",
  FontWeight->"Bold"],
 " to reproduce the plots in Figure 3.11."
}], "ItemNumbered",
 CellChangeTimes->{{3.734446975577996*^9, 3.7344469945089674`*^9}, {
  3.735490036098838*^9, 
  3.735490036098838*^9}},ExpressionUUID->"eb439b46-b36d-4ea3-9367-\
352e84f65364"],

Cell[TextData[{
 "Write a module ",
 StyleBox["HistMatch",
  FontWeight->"Bold"],
 " that performs histogram matching as described in Section 3.1.  You can \
test your module using the WaveletWare function ",
 StyleBox["HistogramMatch",
  FontWeight->"Bold"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.734446975577996*^9, 3.7344469945089674`*^9}, {
  3.735490036879072*^9, 
  3.7354900714287424`*^9}},ExpressionUUID->"30c89fb5-1e26-4981-960d-\
47be5ba79c31"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{759, 614},
WindowMargins->{{454, Automatic}, {123, Automatic}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1355, 18, 67, "Section",ExpressionUUID->"b4d3dd46-bf41-416a-8a69-8d3f86104986"],
Cell[1938, 42, 1071, 17, 56, "Text",ExpressionUUID->"61b27de1-8e6c-4777-a97c-e405fa03ef99"],
Cell[CellGroupData[{
Cell[3034, 63, 187, 3, 44, "Subsubsection",ExpressionUUID->"3fffe5ac-09ce-46e2-8050-8c2090c2603e"],
Cell[3224, 68, 1308, 23, 56, "Text",ExpressionUUID->"6a87367e-199b-4755-909b-1f0e93964a15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4569, 96, 248, 4, 44, "Subsubsection",ExpressionUUID->"f0a02de7-73c3-4fdf-9fb7-3b6354eb70fb"],
Cell[4820, 102, 199, 3, 34, "Text",ExpressionUUID->"1c2f17b5-7d52-43ea-8284-97a0802ab4e4"],
Cell[5022, 107, 1049, 17, 44, "Input",ExpressionUUID->"d0fbe505-08c6-4c5e-bfcb-4eebc307ea21",
 InitializationCell->True],
Cell[6074, 126, 327, 7, 56, "Text",ExpressionUUID->"49e06bb1-94fd-4029-9342-21f25eef50ef"],
Cell[6404, 135, 843, 15, 124, "Input",ExpressionUUID->"274fa8e9-9ea5-489e-93a8-dbe841fdbfb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7284, 155, 182, 3, 44, "Subsubsection",ExpressionUUID->"d233525e-e75a-4a90-85f4-3a8ccfe52efd"],
Cell[7469, 160, 247, 9, 34, "Text",ExpressionUUID->"d159a1d8-b2dc-48b7-b3a7-8600855d1bc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7753, 174, 323, 5, 44, "Subsubsection",ExpressionUUID->"2aef78a0-fa28-4288-b4ee-f6fce3037f4a"],
Cell[8079, 181, 625, 19, 56, "Text",ExpressionUUID->"915c054b-c3eb-4413-aa35-a3586e1346a3"],
Cell[8707, 202, 968, 21, 86, "Input",ExpressionUUID->"4098846f-c384-490d-b75a-4ebd9c28d9ad"],
Cell[9678, 225, 426, 15, 34, "Text",ExpressionUUID->"6252b4fb-212b-4344-97f9-be0cc4030a12"],
Cell[10107, 242, 988, 24, 124, "Input",ExpressionUUID->"034ce676-c4f4-4cf3-b55e-c45b9066841a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11132, 271, 184, 3, 44, "Subsubsection",ExpressionUUID->"66bd68ef-1ab3-45a4-9656-57fd13d9edc8"],
Cell[11319, 276, 491, 10, 56, "Text",ExpressionUUID->"d5dbe6f7-61f1-4cb2-9d10-408f26d67d0a"],
Cell[11813, 288, 812, 17, 48, "Input",ExpressionUUID->"35ac0013-9da8-46bd-9b5e-a6edecb30c1e"],
Cell[12628, 307, 360, 10, 34, "Text",ExpressionUUID->"8df99d87-5943-465d-8215-038ea6ef91fc"],
Cell[12991, 319, 660, 16, 105, "Input",ExpressionUUID->"b9b3e698-b024-4721-b8a1-8284c3e4ffb3"],
Cell[13654, 337, 994, 24, 143, "Input",ExpressionUUID->"dda7bea2-a143-4a8d-907d-c86e548af6c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14685, 366, 225, 4, 44, "Subsubsection",ExpressionUUID->"6fb54b0e-960f-4561-b0ec-dcc930832f11"],
Cell[14913, 372, 227, 5, 34, "Text",ExpressionUUID->"52ea847f-4478-4bd4-b4da-852a840778a7"],
Cell[15143, 379, 955, 19, 67, "Input",ExpressionUUID->"af524d8e-4f21-4bbe-9f16-4808a0b390d9"],
Cell[16101, 400, 1233, 42, 100, "Text",ExpressionUUID->"32e016c5-2235-4014-89ef-f9dd3099c899"],
Cell[17337, 444, 888, 22, 48, "Input",ExpressionUUID->"aa248746-e193-4272-8efa-e497d9204cc0"],
Cell[18228, 468, 1590, 51, 144, "Text",ExpressionUUID->"0422ab36-e341-4b94-903a-7ca78aa00f11"],
Cell[19821, 521, 670, 13, 48, "Input",ExpressionUUID->"0430c36d-cbed-4170-9be6-6cd0f994c822"],
Cell[20494, 536, 313, 9, 56, "Text",ExpressionUUID->"39a6a922-def2-4b9a-9f67-7a294ae2250f"],
Cell[20810, 547, 350, 8, 48, "Input",ExpressionUUID->"65426331-6f5d-4d22-8bb3-b85417fb8e5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21197, 560, 243, 4, 44, "Subsubsection",ExpressionUUID->"5079f3ef-54e1-4916-912a-5d7f3f77a134"],
Cell[21443, 566, 442, 10, 56, "Text",ExpressionUUID->"4f014c93-a5ed-4d93-81d1-fffc023ba58b"],
Cell[21888, 578, 1041, 22, 67, "Input",ExpressionUUID->"98a5ea28-1fcd-4fb0-8a83-16fe9a9c47bc"],
Cell[22932, 602, 611, 12, 56, "Text",ExpressionUUID->"1f0b3814-c3be-4513-822e-92ffc73d85b6"],
Cell[23546, 616, 505, 11, 28, "Input",ExpressionUUID->"e81782bf-5a47-4f8e-8031-1e9001174319"],
Cell[24054, 629, 878, 19, 143, "Input",ExpressionUUID->"d48d4a83-611e-4b8b-be1a-040e59f9c2fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24969, 653, 163, 3, 44, "Subsubsection",ExpressionUUID->"6ca58717-5e56-4c6c-b77d-3d784d01dc8c"],
Cell[CellGroupData[{
Cell[25157, 660, 321, 9, 31, "ItemNumbered",ExpressionUUID->"eb439b46-b36d-4ea3-9367-352e84f65364"],
Cell[25481, 671, 463, 13, 51, "ItemNumbered",ExpressionUUID->"30c89fb5-1e26-4981-960d-47be5ba79c31"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

